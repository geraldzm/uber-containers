Crear Volumen :
docker volume create vol_italy1
docker volume create vol_china2

Crear Servidor Principal del pais que le toca :
docker run -d -p 27001:27017 -v vol_italy1:/data/db --name italy1 mongo mongod --port 27017 --bind_ip_all --shardsvr --replSet "repitaly" --dbpath /data/db

Secundario, del pais que le toca replicar
docker run -d -p 27201:27017 -v vol_china2:/data/db --name china2 mongo mongod --port 27017 --bind_ip_all --shardsvr --replSet "repchina" --dbpath /data/db

Iniciar ReplicaSet :

docker exec -it italy1 mongo

rs.initiate(
  {
    _id: "repitaly",
    members: [
      { _id : 0, host : "25.4.55.235:27001" },
      { _id : 1, host : "25.5.185.77:27001" }
    ]
  }
);

cfg = rs.conf();
cfg.members[0].priority = 2;
cfg.members[1].priority = 0.5;
rs.reconfig(cfg);

Crear Árbitro :
docker run -d -p 37001:27017 --name arbitaly mongo mongod --port 27017 --replSet "repitaly"

Añadir árbitro dentro del servidor principal :

docker exec -it italy1 mongo

rs.addArb("25.4.55.235:37001");

----------------------
Pruebitas de conexión : 
docker exec -it italy1 mongo

use pruebaMexico

db.container.insert({"country":"", "cantidad":1 });

db.tacos.save({"nombre":"Pastor", "cantidad":5});
db.tacos.save({"nombre":"Birria", "cantidad":2});
db.tacos.save({"nombre":"Chorizo", "cantidad":3});

db.tacos.find();

---------------------------Create Config-------------------------------------
Crear Volumen :
docker volume create vol_cfg1

Crear container de configuracion :
docker run -d -p 47001:27017 -v vol_cfg1:/data/configdb --name cfg1 mongo mongod --port 27017 --bind_ip_all --configsvr --replSet "repcfg" --dbpath /data/configdb

docker exec -it cfg1 mongo

configsvr: true

rs.initiate(
  {
    _id: "repcfg",
    members: [
      { _id : 0, host : "25.4.55.235:47001" },
      { _id : 1, host : "25.5.185.77:47001" }
    ]
  }
);

cfg = rs.conf();
cfg.members[0].priority = 2;
cfg.members[1].priority = 0.5;
rs.reconfig(cfg);

--------------------------Create Routers-------------------------------------

Router:
docker run -d -p 47003:27017 --name router1 mongo mongos --port 27017 --configdb repcfg/25.4.55.235:47001,25.5.185.77:47001 --bind_ip_all

docker exec -it router1 mongo

----------------------------------------------------------------
sh.addShard( "repitaly/25.4.55.235:27001");

sh.addShard( "repspain/25.5.185.77:27101");

sh.addShard( "repchina/25.1.213.132:27201");

sh.status()

sh.addShardTag("repitaly", "italy");
sh.addShardTag("repspain", "spain");
sh.addShardTag("repchina", "china");

--------------------------Add tags--------------------------------------
sh.addTagRange( "ubertainer.container",
                { country: "italy"},
                { country: "italy99999"},
                "italy"
              );

sh.addTagRange( "ubertainer.container",
                { country: "spain"},
                { country: "spain9999"},
                "spain"
              );

sh.addTagRange( "ubertainer.container",
                { country: "china"},
                { country: "china9999"},
                "china"
              );

//Le indico la base de datos y lo mando a correr
sh.enableSharding("ubertainer");

//Indico la collection
sh.shardCollection("ubertainer.container", { country : 1 } )

----------------------------test tags------------------------------------

db.container.insert({"country":"china", "cantidad":1 });
db.container.insert({"country":"spain", "cantidad":2 });
db.container.insert({"country":"italy", "cantidad":3 });

db.container.insert({"country":"cr", "cantidad":999 });